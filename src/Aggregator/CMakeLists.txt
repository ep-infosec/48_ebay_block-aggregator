include_directories(${GLOG_INCLUDE_DIR})
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/..)

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../Serializable)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/../KafkaConnector)
include_directories(BEFORE ${LIBRDKAFKA_INCLUDE_DIR})

# include protobuf and its compiler generated directory
include_directories(${NEW_PROTOBUFFER_INCLUDE_DIR})
set(MESSAGE_MODEL_BINARY_DIR ${CMAKE_CURRENT_BINARY_DIR}/../Serializable/cpp)
set(MESSAGE_MODEL_INCLUDE_DIR ${CMAKE_CURRENT_BINARY_DIR}/../Serializable/cpp)
MESSAGE ("*******MESSAGE MODEL INCLUDE in Aggregator is: ${MESSAGE_MODEL_INCLUDE_DIR}")
include_directories(${MESSAGE_MODEL_INCLUDE_DIR})

include_directories(${Poco_INCLUDE_DIRS})

# for all of the click-house related include files
MESSAGE ("*******CLICKHOUSE_INCLUDE_DIRS is: ${CLICKHOUSE_INCLUDE_DIRS}")
include_directories(${CLICKHOUSE_INCLUDE_DIRS})

include_directories(${BOOST_INCLUDE_DIR})
include_directories(${LIBCOMMON_INCLUDE_DIR})

MESSAGE ("*******LIBDAEMON_INCLUDE_DIR is: ${LIBDAEMON_INCLUDE_DIR}")
include_directories(${LIBDAEMON_INCLUDE_DIR})
MESSAGE ("*******LIBLOGGER_INCLUDE_DIR is: ${LIBLOGGER_INCLUDE_DIR}")
include_directories(${LIBLOGGER_INCLUDE_DIR})


include_directories(${LIB_CITYHASH_INCLUDE_DIR})
include_directories(${LIB_PCG_RANDOM_INCLUDE_DIR})

add_library(aggregator
    AggregatorConfiguration.cpp
    AggregatorLoaderManager.cpp
    KafkaConnectorManager.cpp
    AggregatorLoader.cpp
    AggregatorServer.cpp
    ErrorCodes.cpp
    Fetcher.cpp
    KafkaStreamFetcher.cpp
    MemoryBufferManager.cpp
    BlockSupportedBuffer.cpp
    BlockSupportedBufferFlushTask.cpp
)

add_library(EXTERNAL_DAEMON_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_DAEMON_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_DAEMON_LIBRARY})

add_library(EXTERNAL_LOGGERS_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_LOGGERS_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_LOGGERS_LIBRARY})

add_library(EXTERNAL_COMMON_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_COMMON_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_COMMON_LIBRARY})


add_library(EXTERNAL_Poco_Util_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_Poco_Util_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_Poco_Util_LIBRARY})

add_library(EXTERNAL_Poco_JSON_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_Poco_JSON_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_Poco_JSON_LIBRARY})

add_library(EXTERNAL_Poco_XML_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_Poco_XML_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_Poco_XML_LIBRARY})

add_library(EXTERNAL_Poco_Net_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_Poco_Net_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_Poco_Net_LIBRARY})

add_library(EXTERNAL_Poco_Foundation_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_Poco_Foundation_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_Poco_Foundation_LIBRARY})

add_library(EXTERNAL_Poco_Data_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_Poco_Data_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_Poco_Data_LIBRARY})

add_library(EXTERNAL_Poco_NetSSL_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_Poco_NetSSL_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_Poco_NetSSL_LIBRARY})

add_library(EXTERNAL_Poco_Crypto_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_Poco_Crypto_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_Poco_Crypto_LIBRARY})


add_library(EXTERNAL_BOOST_FILESYSTEM_INTERNAL_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_BOOST_FILESYSTEM_INTERNAL_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_BOOST_FILESYSTEM_INTERNAL_LIBRARY})

add_library(EXTERNAL_BOOST_SYSTEM_INTERNAL_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_BOOST_SYSTEM_INTERNAL_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_BOOST_SYSTEM_INTERNAL_LIBRARY})

add_library(EXTERNAL_BOOST_PROGRAM_OPTIONS_INTERNAL_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_BOOST_PROGRAM_OPTIONS_INTERNAL_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_BOOST_PROGRAM_OPTIONS_INTERNAL_LIBRARY})

add_library(EXTERNAL_BOOST_REGEX_INTERNAL_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_BOOST_REGEX_INTERNAL_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_BOOST_REGEX_INTERNAL_LIBRARY})

add_library(EXTERNAL_THRIFT_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_THRIFT_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_THRIFT_LIBRARY})

add_library(EXTERNAL_RE2_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_RE2_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_RE2_LIBRARY})

add_library(EXTERNAL_RE2_ST_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_RE2_ST_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_RE2_ST_LIBRARY})

add_library(EXTERNAL_CPUID_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CPUID_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_CPUID_LIBRARY})

add_library(EXTERNAL_ZLIB_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_ZLIB_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_ZLIB_LIBRARY})

add_library(EXTERNAL_CITYHASH_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CITYHASH_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_CITYHASH_LIBRARY})

add_library(EXTERNAL_CCTZ_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CCTZ_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_CCTZ_LIBRARY})

add_library(EXTERNAL_PARQUET_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_PARQUET_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_PARQUET_LIBRARY})

add_library(EXTERNAL_ARROW_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_ARROW_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_ARROW_LIBRARY})

add_library(EXTERNAL_DOUBLE_CONVERSION_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_DOUBLE_CONVERSION_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_DOUBLE_CONVERSION_LIBRARY})

add_library(EXTERNAL_SNAPPY_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_SNAPPY_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_SNAPPY_LIBRARY})

add_library(EXTERNAL_LZ4_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_LZ4_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_LZ4_LIBRARY})

add_library(EXTERNAL_ZSTD_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_ZSTD_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_ZSTD_LIBRARY})

add_library(EXTERNAL_CAPNP_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CAPNP_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_CAPNP_LIBRARY})

add_library(EXTERNAL_CAPNPC_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CAPNPC_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_CAPNPC_LIBRARY})

add_library(EXTERNAL_KJ_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_KJ_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_KJ_LIBRARY})

add_library(EXTERNAL_PROTOBUF_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_PROTOBUF_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_PROTOBUF_LIBRARY})

add_library(EXTERNAL_MYSQL_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_MYSQL_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_MYSQL_LIBRARY})

add_library(EXTERNAL_MARIADB_CLIENT_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_MARIADB_CLIENT_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_MARIADB_CLIENT_LIBRARY})

add_library(EXTERNAL_SSL_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_SSL_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_SSL_LIBRARY})

add_library(EXTERNAL_CRYPTO_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CRYPTO_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_CRYPTO_LIBRARY})

add_library(EXTERNAL_CLICKHOUSE_DBMS_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CLICKHOUSE_DBMS_LIBRARY PROPERTIES IMPORTED_LOCATION ${CLICKHOUSE_DBMS_LIBRARY})

add_library(EXTERNAL_CLICKHOUSE_DICTIONARIES_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CLICKHOUSE_DICTIONARIES_LIBRARY PROPERTIES IMPORTED_LOCATION ${CLICKHOUSE_DICTIONARIES_LIBRARY})

add_library(EXTERNAL_CLICKHOUSE_DICTIONARIES_EMBEDDED_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CLICKHOUSE_DICTIONARIES_EMBEDDED_LIBRARY PROPERTIES IMPORTED_LOCATION ${CLICKHOUSE_DICTIONARIES_EMBEDDED_LIBRARY})

add_library(EXTERNAL_CLICKHOUSE_COMMON_IO_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CLICKHOUSE_COMMON_IO_LIBRARY PROPERTIES IMPORTED_LOCATION ${CLICKHOUSE_COMMON_IO_LIBRARY})

add_library(EXTERNAL_CLICKHOUSE_COMMON_CONFIG_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CLICKHOUSE_COMMON_CONFIG_LIBRARY PROPERTIES IMPORTED_LOCATION ${CLICKHOUSE_COMMON_CONFIG_LIBRARY})

add_library(EXTERNAL_CLICKHOUSE_COMMON_ZOOKEEPER_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CLICKHOUSE_COMMON_ZOOKEEPER_LIBRARY PROPERTIES IMPORTED_LOCATION ${CLICKHOUSE_COMMON_ZOOKEEPER_LIBRARY})

add_library(EXTERNAL_CLICKHOUSE_PARSERS_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CLICKHOUSE_PARSERS_LIBRARY PROPERTIES IMPORTED_LOCATION ${CLICKHOUSE_PARSERS_LIBRARY})

add_library(EXTERNAL_CLICKHOUSE_STRING_UTILS_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CLICKHOUSE_STRING_UTILS_LIBRARY PROPERTIES IMPORTED_LOCATION ${CLICKHOUSE_STRING_UTILS_LIBRARY})


add_library(EXTERNAL_CLICKHOUSE_STORAGES_SYSTEM_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CLICKHOUSE_STORAGES_SYSTEM_LIBRARY PROPERTIES IMPORTED_LOCATION ${CLICKHOUSE_STORAGES_SYSTEM_LIBRARY})

add_library(EXTERNAL_CLICKHOUSE_FUNCTIONS_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CLICKHOUSE_FUNCTIONS_LIBRARY PROPERTIES IMPORTED_LOCATION ${CLICKHOUSE_FUNCTIONS_LIBRARY})

add_library(EXTERNAL_CLICKHOUSE_AGGREGATE_FUNCTIONS_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CLICKHOUSE_AGGREGATE_FUNCTIONS_LIBRARY PROPERTIES IMPORTED_LOCATION ${CLICKHOUSE_AGGREGATE_FUNCTIONS_LIBRARY})

add_library(EXTERNAL_CLICKHOUSE_TABLE_FUNCTIONS_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CLICKHOUSE_TABLE_FUNCTIONS_LIBRARY PROPERTIES IMPORTED_LOCATION ${CLICKHOUSE_TABLE_FUNCTIONS_LIBRARY})


target_link_libraries (aggregator
    serializable
    kafkaconnector
    
    EXTERNAL_CLICKHOUSE_DBMS_LIBRARY
    EXTERNAL_CLICKHOUSE_DICTIONARIES_LIBRARY
    EXTERNAL_CLICKHOUSE_DICTIONARIES_EMBEDDED_LIBRARY
    EXTERNAL_CLICKHOUSE_COMMON_CONFIG_LIBRARY
    EXTERNAL_CLICKHOUSE_COMMON_ZOOKEEPER_LIBRARY
    EXTERNAL_CLICKHOUSE_PARSERS_LIBRARY
    EXTERNAL_CLICKHOUSE_STORAGES_SYSTEM_LIBRARY
    EXTERNAL_CLICKHOUSE_FUNCTIONS_LIBRARY
    EXTERNAL_CLICKHOUSE_AGGREGATE_FUNCTIONS_LIBRARY
    EXTERNAL_CLICKHOUSE_TABLE_FUNCTIONS_LIBRARY
    EXTERNAL_CLICKHOUSE_COMMON_IO_LIBRARY
    EXTERNAL_CLICKHOUSE_STRING_UTILS_LIBRARY

    ${ICU_LIBRARIES}

    EXTERNAL_MYSQL_LIBRARY
    
    EXTERNAL_DAEMON_LIBRARY
    EXTERNAL_LOGGERS_LIBRARY
    EXTERNAL_COMMON_LIBRARY
    
    EXTERNAL_Poco_Util_LIBRARY
    EXTERNAL_Poco_JSON_LIBRARY
    EXTERNAL_Poco_XML_LIBRARY
    EXTERNAL_Poco_Net_LIBRARY
    EXTERNAL_Poco_Foundation_LIBRARY

    EXTERNAL_Poco_Data_LIBRARY 
    EXTERNAL_Poco_NetSSL_LIBRARY 
    EXTERNAL_Poco_Crypto_LIBRARY

    EXTERNAL_RE2_LIBRARY
    EXTERNAL_RE2_ST_LIBRARY

    EXTERNAL_CPUID_LIBRARY

    EXTERNAL_CITYHASH_LIBRARY 
    EXTERNAL_CCTZ_LIBRARY 

    EXTERNAL_MARIADB_CLIENT_LIBRARY

    EXTERNAL_SSL_LIBRARY
    EXTERNAL_CRYPTO_LIBRARY

    EXTERNAL_CAPNPC_LIBRARY
    EXTERNAL_CAPNP_LIBRARY

    EXTERNAL_KJ_LIBRARY

    EXTERNAL_PARQUET_LIBRARY
    EXTERNAL_ARROW_LIBRARY
    EXTERNAL_DOUBLE_CONVERSION_LIBRARY

    EXTERNAL_PROTOBUF_LIBRARY

    EXTERNAL_ZLIB_LIBRARY

    EXTERNAL_LZ4_LIBRARY
    EXTERNAL_ZSTD_LIBRARY
    EXTERNAL_SNAPPY_LIBRARY

    EXTERNAL_THRIFT_LIBRARY

    EXTERNAL_BOOST_FILESYSTEM_INTERNAL_LIBRARY
    EXTERNAL_BOOST_SYSTEM_INTERNAL_LIBRARY
    EXTERNAL_BOOST_PROGRAM_OPTIONS_INTERNAL_LIBRARY
    EXTERNAL_BOOST_REGEX_INTERNAL_LIBRARY

)

##if (RT_LIBRARY)
##    target_link_libraries (common PRIVATE ${RT_LIBRARY})
##endif ()

if (ENABLE_TESTS)
    add_subdirectory (tests)
endif ()
