#to invoke protocol buffer to generate protobuf files
set(MESSAGE_MODEL_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/proto)
set(MESSAGE_MODEL_SOURCE_FILE ${MESSAGE_MODEL_SOURCE_DIR}/nucolumnar/aggregator/v1/nucolumnaraggregator.proto)
set(MESSAGE_MODEL_DEPENDENT_SOURCE_FILE ${MESSAGE_MODEL_SOURCE_DIR}/nucolumnar/datatypes/v1/columnartypes.proto)
set(MESSAGE_MODEL_BINARY_DIR ${CMAKE_CURRENT_BINARY_DIR}/cpp)
set (MESSAGE_MODEL_INCLUDE_DIR ${CMAKE_CURRENT_BINARY_DIR}/cpp)
file (MAKE_DIRECTORY ${MESSAGE_MODEL_INCLUDE_DIR})
file (MAKE_DIRECTORY ${MESSAGE_MODEL_BINARY_DIR})

set(deps_prefix ${PROJECT_SOURCE_DIR}/deps_prefix)
MESSAGE ("dep_prefix is set: ${deps_prefix}")
set(PROTOBUF_PROTOC_EXECUTABLE ${deps_prefix}/bin/protoc)

add_custom_command(
  OUTPUT "${MESSAGE_MODEL_BINARY_DIR}/nucolumnar/aggregator/v1/nucolumnaraggregator.pb.cc"
         "${MESSAGE_MODEL_BINARY_DIR}/nucolumnar/aggregator/v1/nucolumnaraggregator.pb.h"
  COMMAND  ${PROTOBUF_PROTOC_EXECUTABLE}
  ARGS --cpp_out ${MESSAGE_MODEL_BINARY_DIR} -I ${MESSAGE_MODEL_SOURCE_DIR} ${MESSAGE_MODEL_SOURCE_FILE}
  DEPENDS ${MESSAGE_MODEL_PROTO} ${PROTOBUF_PROTOC_EXECUTABLE}
  COMMENT "Running C++ protocol buffer compiler for nucolumnar service-aggregator message related messages"
  VERBATIM)


add_custom_command(
  OUTPUT "${MESSAGE_MODEL_BINARY_DIR}/nucolumnar/datatypes/v1/columnartypes.pb.cc"
         "${MESSAGE_MODEL_BINARY_DIR}/nucolumnar/datatypes/v1/columnartypes.pb.h"
  COMMAND  ${PROTOBUF_PROTOC_EXECUTABLE}
  ARGS --cpp_out ${MESSAGE_MODEL_BINARY_DIR} -I ${MESSAGE_MODEL_SOURCE_DIR} ${MESSAGE_MODEL_DEPENDENT_SOURCE_FILE}
  DEPENDS ${MESSAGE_MODEL_PROTO} ${PROTOBUF_PROTOC_EXECUTABLE}
  COMMENT "Running C++ protocol buffer compiler for nucolumnar service-aggregator message related messages"
  VERBATIM)


include_directories(${GLOG_INCLUDE_DIR})
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/..)
include_directories(${Poco_INCLUDE_DIRS})

# for all of the click-house related include files
MESSAGE ("*******CLICKHOUSE_INCLUDE_DIRS is: ${CLICKHOUSE_INCLUDE_DIRS}")
include_directories(${CLICKHOUSE_INCLUDE_DIRS})

include_directories(${BOOST_INCLUDE_DIR})
include_directories(${LIBCOMMON_INCLUDE_DIR})
include_directories(${LIB_CITYHASH_INCLUDE_DIR})
include_directories(${LIB_PCG_RANDOM_INCLUDE_DIR})

# include protobuf compiler generated directory
include_directories(${NEW_PROTOBUFFER_INCLUDE_DIR})
include_directories(${MESSAGE_MODEL_INCLUDE_DIR})

add_library(serializable
    ISerializableDataType.cpp
    SerializableDataTypeNumberBase.cpp
    SerializableDataTypesNumber.cpp
    SerializableDataTypeFactory.cpp
    SerializableDataTypeDate.cpp
    SerializableDataTypeDateTime.cpp
    SerializableDataTypeString.cpp
    SerializableDataTypeFixedString.cpp
    SerializableDataTypeNullable.cpp
    SerializationHelper.cpp
    ProtobufBatchReader.cpp
    ProtobufReader.cpp

    #to have this serialization package to be self-contained.     
    ../Aggregator/ErrorCodes.cpp

    ${MESSAGE_MODEL_BINARY_DIR}/nucolumnar/aggregator/v1/nucolumnaraggregator.pb.cc
    ${MESSAGE_MODEL_BINARY_DIR}/nucolumnar/aggregator/v1/nucolumnaraggregator.pb.h

    ${MESSAGE_MODEL_BINARY_DIR}/nucolumnar/datatypes/v1/columnartypes.pb.cc
    ${MESSAGE_MODEL_BINARY_DIR}/nucolumnar/datatypes/v1/columnartypes.pb.h

)


add_library(EXTERNAL_DAEMON_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_DAEMON_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_DAEMON_LIBRARY})

add_library(EXTERNAL_COMMON_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_COMMON_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_COMMON_LIBRARY})


add_library(EXTERNAL_Poco_Util_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_Poco_Util_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_Poco_Util_LIBRARY})

add_library(EXTERNAL_Poco_JSON_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_Poco_JSON_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_Poco_JSON_LIBRARY})

add_library(EXTERNAL_Poco_XML_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_Poco_XML_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_Poco_XML_LIBRARY})

add_library(EXTERNAL_Poco_Net_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_Poco_Net_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_Poco_Net_LIBRARY})

add_library(EXTERNAL_Poco_Foundation_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_Poco_Foundation_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_Poco_Foundation_LIBRARY})

add_library(EXTERNAL_Poco_Data_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_Poco_Data_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_Poco_Data_LIBRARY})

add_library(EXTERNAL_Poco_NetSSL_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_Poco_NetSSL_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_Poco_NetSSL_LIBRARY})

add_library(EXTERNAL_Poco_Crypto_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_Poco_Crypto_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_Poco_Crypto_LIBRARY})


add_library(EXTERNAL_BOOST_FILESYSTEM_INTERNAL_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_BOOST_FILESYSTEM_INTERNAL_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_BOOST_FILESYSTEM_INTERNAL_LIBRARY})

add_library(EXTERNAL_BOOST_SYSTEM_INTERNAL_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_BOOST_SYSTEM_INTERNAL_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_BOOST_SYSTEM_INTERNAL_LIBRARY})

add_library(EXTERNAL_BOOST_PROGRAM_OPTIONS_INTERNAL_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_BOOST_PROGRAM_OPTIONS_INTERNAL_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_BOOST_PROGRAM_OPTIONS_INTERNAL_LIBRARY})

add_library(EXTERNAL_BOOST_REGEX_INTERNAL_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_BOOST_REGEX_INTERNAL_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_BOOST_REGEX_INTERNAL_LIBRARY})

add_library(EXTERNAL_THRIFT_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_THRIFT_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_THRIFT_LIBRARY})

add_library(EXTERNAL_RE2_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_RE2_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_RE2_LIBRARY})

add_library(EXTERNAL_RE2_ST_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_RE2_ST_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_RE2_ST_LIBRARY})

add_library(EXTERNAL_CPUID_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CPUID_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_CPUID_LIBRARY})

add_library(EXTERNAL_ZLIB_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_ZLIB_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_ZLIB_LIBRARY})

add_library(EXTERNAL_CITYHASH_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CITYHASH_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_CITYHASH_LIBRARY})

add_library(EXTERNAL_CCTZ_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CCTZ_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_CCTZ_LIBRARY})

add_library(EXTERNAL_PARQUET_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_PARQUET_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_PARQUET_LIBRARY})

add_library(EXTERNAL_ARROW_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_ARROW_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_ARROW_LIBRARY})

add_library(EXTERNAL_DOUBLE_CONVERSION_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_DOUBLE_CONVERSION_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_DOUBLE_CONVERSION_LIBRARY})

add_library(EXTERNAL_SNAPPY_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_SNAPPY_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_SNAPPY_LIBRARY})

add_library(EXTERNAL_LZ4_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_LZ4_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_LZ4_LIBRARY})

add_library(EXTERNAL_ZSTD_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_ZSTD_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_ZSTD_LIBRARY})

add_library(EXTERNAL_CAPNP_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CAPNP_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_CAPNP_LIBRARY})

add_library(EXTERNAL_CAPNPC_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CAPNPC_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_CAPNPC_LIBRARY})

add_library(EXTERNAL_KJ_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_KJ_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_KJ_LIBRARY})

## the one that ClickHouse is dependent on
add_library(EXTERNAL_PROTOBUF_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_PROTOBUF_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_PROTOBUF_LIBRARY})

## the one that the aggregator message is directly dependent on
add_library(EXTERNAL_NEW_PROTOBUF_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_NEW_PROTOBUF_LIBRARY PROPERTIES IMPORTED_LOCATION ${NEW_PROTOBUFFER_LIBRARY})

add_library(EXTERNAL_MYSQL_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_MYSQL_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_MYSQL_LIBRARY})

add_library(EXTERNAL_MARIADB_CLIENT_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_MARIADB_CLIENT_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_MARIADB_CLIENT_LIBRARY})

add_library(EXTERNAL_SSL_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_SSL_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_SSL_LIBRARY})

add_library(EXTERNAL_CRYPTO_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CRYPTO_LIBRARY PROPERTIES IMPORTED_LOCATION ${Identified_CRYPTO_LIBRARY})

add_library(EXTERNAL_CLICKHOUSE_DBMS_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CLICKHOUSE_DBMS_LIBRARY PROPERTIES IMPORTED_LOCATION ${CLICKHOUSE_DBMS_LIBRARY})

add_library(EXTERNAL_CLICKHOUSE_DICTIONARIES_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CLICKHOUSE_DICTIONARIES_LIBRARY PROPERTIES IMPORTED_LOCATION ${CLICKHOUSE_DICTIONARIES_LIBRARY})

add_library(EXTERNAL_CLICKHOUSE_DICTIONARIES_EMBEDDED_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CLICKHOUSE_DICTIONARIES_EMBEDDED_LIBRARY PROPERTIES IMPORTED_LOCATION ${CLICKHOUSE_DICTIONARIES_EMBEDDED_LIBRARY})

add_library(EXTERNAL_CLICKHOUSE_COMMON_IO_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CLICKHOUSE_COMMON_IO_LIBRARY PROPERTIES IMPORTED_LOCATION ${CLICKHOUSE_COMMON_IO_LIBRARY})

add_library(EXTERNAL_CLICKHOUSE_COMMON_CONFIG_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CLICKHOUSE_COMMON_CONFIG_LIBRARY PROPERTIES IMPORTED_LOCATION ${CLICKHOUSE_COMMON_CONFIG_LIBRARY})

add_library(EXTERNAL_CLICKHOUSE_COMMON_ZOOKEEPER_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CLICKHOUSE_COMMON_ZOOKEEPER_LIBRARY PROPERTIES IMPORTED_LOCATION ${CLICKHOUSE_COMMON_ZOOKEEPER_LIBRARY})

add_library(EXTERNAL_CLICKHOUSE_PARSERS_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CLICKHOUSE_PARSERS_LIBRARY PROPERTIES IMPORTED_LOCATION ${CLICKHOUSE_PARSERS_LIBRARY})

add_library(EXTERNAL_CLICKHOUSE_STRING_UTILS_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CLICKHOUSE_STRING_UTILS_LIBRARY PROPERTIES IMPORTED_LOCATION ${CLICKHOUSE_STRING_UTILS_LIBRARY})


add_library(EXTERNAL_CLICKHOUSE_STORAGES_SYSTEM_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CLICKHOUSE_STORAGES_SYSTEM_LIBRARY PROPERTIES IMPORTED_LOCATION ${CLICKHOUSE_STORAGES_SYSTEM_LIBRARY})

add_library(EXTERNAL_CLICKHOUSE_FUNCTIONS_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CLICKHOUSE_FUNCTIONS_LIBRARY PROPERTIES IMPORTED_LOCATION ${CLICKHOUSE_FUNCTIONS_LIBRARY})

add_library(EXTERNAL_CLICKHOUSE_AGGREGATE_FUNCTIONS_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CLICKHOUSE_AGGREGATE_FUNCTIONS_LIBRARY PROPERTIES IMPORTED_LOCATION ${CLICKHOUSE_AGGREGATE_FUNCTIONS_LIBRARY})

add_library(EXTERNAL_CLICKHOUSE_TABLE_FUNCTIONS_LIBRARY STATIC IMPORTED)
set_target_properties( EXTERNAL_CLICKHOUSE_TABLE_FUNCTIONS_LIBRARY PROPERTIES IMPORTED_LOCATION ${CLICKHOUSE_TABLE_FUNCTIONS_LIBRARY})

target_link_libraries (serializable

    EXTERNAL_NEW_PROTOBUF_LIBRARY
    
    EXTERNAL_CLICKHOUSE_DBMS_LIBRARY
    EXTERNAL_CLICKHOUSE_DICTIONARIES_LIBRARY
    EXTERNAL_CLICKHOUSE_DICTIONARIES_EMBEDDED_LIBRARY
    EXTERNAL_CLICKHOUSE_COMMON_CONFIG_LIBRARY
    EXTERNAL_CLICKHOUSE_COMMON_ZOOKEEPER_LIBRARY
    EXTERNAL_CLICKHOUSE_PARSERS_LIBRARY
    EXTERNAL_CLICKHOUSE_STORAGES_SYSTEM_LIBRARY
    EXTERNAL_CLICKHOUSE_FUNCTIONS_LIBRARY
    EXTERNAL_CLICKHOUSE_AGGREGATE_FUNCTIONS_LIBRARY
    EXTERNAL_CLICKHOUSE_TABLE_FUNCTIONS_LIBRARY
    EXTERNAL_CLICKHOUSE_COMMON_IO_LIBRARY
    EXTERNAL_CLICKHOUSE_STRING_UTILS_LIBRARY


    ${ICU_LIBRARIES}

    EXTERNAL_MYSQL_LIBRARY
    
    EXTERNAL_DAEMON_LIBRARY
    EXTERNAL_COMMON_LIBRARY
    
    EXTERNAL_Poco_Util_LIBRARY
    EXTERNAL_Poco_JSON_LIBRARY
    EXTERNAL_Poco_XML_LIBRARY
    EXTERNAL_Poco_Net_LIBRARY
    EXTERNAL_Poco_Foundation_LIBRARY

    EXTERNAL_Poco_Data_LIBRARY 
    EXTERNAL_Poco_NetSSL_LIBRARY 
    EXTERNAL_Poco_Crypto_LIBRARY

    EXTERNAL_RE2_LIBRARY
    EXTERNAL_RE2_ST_LIBRARY

    EXTERNAL_CPUID_LIBRARY

    EXTERNAL_CITYHASH_LIBRARY 
    EXTERNAL_CCTZ_LIBRARY 

    EXTERNAL_MARIADB_CLIENT_LIBRARY

    EXTERNAL_SSL_LIBRARY
    EXTERNAL_CRYPTO_LIBRARY

    EXTERNAL_CAPNPC_LIBRARY
    EXTERNAL_CAPNP_LIBRARY

    EXTERNAL_KJ_LIBRARY

    EXTERNAL_PARQUET_LIBRARY
    EXTERNAL_ARROW_LIBRARY
    EXTERNAL_DOUBLE_CONVERSION_LIBRARY

    EXTERNAL_PROTOBUF_LIBRARY

    EXTERNAL_ZLIB_LIBRARY

    EXTERNAL_LZ4_LIBRARY
    EXTERNAL_ZSTD_LIBRARY
    EXTERNAL_SNAPPY_LIBRARY

    EXTERNAL_THRIFT_LIBRARY

    EXTERNAL_BOOST_FILESYSTEM_INTERNAL_LIBRARY
    EXTERNAL_BOOST_SYSTEM_INTERNAL_LIBRARY
    EXTERNAL_BOOST_PROGRAM_OPTIONS_INTERNAL_LIBRARY
    EXTERNAL_BOOST_REGEX_INTERNAL_LIBRARY

)

if (ENABLE_TESTS)
   add_subdirectory (tests)
endif ()
